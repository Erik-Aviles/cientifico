(()=>{"use strict";var n={};n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),(()=>{var a;n.g.importScripts&&(a=n.g.location+"");var s=n.g.document;if(!a&&s&&(s.currentScript&&(a=s.currentScript.src),!a)){var t=s.getElementsByTagName("script");t.length&&(a=t[t.length-1].src)}if(!a)throw new Error("Automatic publicPath is not supported in this browser");a=a.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=a})();const a=()=>'\n    <div class="Header-main">\n        <div class="Header-logo">\n            <h2>\n                <a href="#/">\n                    <img src="https://the-rick-and-morty-api.herokuapp.com/static/media/logo.1c95a02a.png" alt="Rick and Morty" />\n                </a>\n            </h2>\n        </div> \n        <div class="Header-nav">\n            <h2>\n               \n                <a href="#/about/"> About\n                </a>\n            </h2>\n        </div>\n    </div>\n    ',s="https://rickandmortyapi.com/api/",t=async n=>{const a=n?`${s}${n}`:s;try{const n=await fetch(a);return await n.json()}catch(n){console.log("Fetch Error",n)}},i=async()=>`\n        <div class="Characters">\n            ${(await t("character/")).results.map((n=>`\n                <article class="Characters-item">\n                    <a href="#/${n.id}/">\n                        <img src="${n.image}" alt="${n.name}">\n                        <h2>${n.id} - ${n.name}</h2>\n                    </a>\n                </article>\n            `)).join("")}\n        </div>  \n    `,e=()=>location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/",r=async()=>{const n=e(),a=await t(`character/${n}`);return`\n    <div class="Characters-inner">\n            <article class="Characters-card">\n                <img src="${a.image}" alt="${a.name}">   \n            </article>\n            <article class="Characters-card">\n                <h2>${a.name}</h2>\n                <h3>Episodes: <span>${a.episode.length}</span></h3>\n                <h3>Status: <span>${a.status}</span></h3>\n                <h3>Species: <span>${a.species}</span></h3>\n                <h3>Gender: <span>${a.gender}</span></h3>\n                <h3>Origin: <span>${a.origin.name}</span></h3>\n                <h3>Last Location: <span>${a.location.name}</span></h3>\n                <h3>Created: <span>${a.created}</span></h3>\n            </article>\n    </div>\n    `},c=async()=>{const n=await t("character"),a=await t("location"),s=await t("episode");return`\n    <section class="Section">\n        <a href="#/characters/">\n            <p>Characters: \n                <span>\n                    ${n.info.count}\n                </span>\n            </p>\n        </a>\n        <a href="#/locations/">\n            <p>Locations:\n                <span>\n                    ${a.info.count}\n                </span>\n            </p>\n        </a>\n        <a href="#/episodes/">\n            <p>Episodios:\n                <span>\n                    ${s.info.count}\n                </span>\n            </p>\n        </a>\n    </section>\n    `},o=async()=>`\n    <div class="List-characters List" id="listaCharacters">\n        <h1 class="Title-list-characters">Todos los personajes</h1>\n        <ul>\n        ${(await t("/character")).results.map((n=>`\n            <li>\n                ${n.name}\n            </li>\n            `)).join("")}\n        </ul>\n    </div>\n    `,l=async()=>`\n    <div class="List-episodes List" id="listaEpisodes">\n        <h1 class="Title-list-episodes">Todos los episodios</h1>\n        <ul>\n        ${(await t("/episode")).results.map((n=>`\n            <li>\n                ${n.name}\n            </li>\n            `)).join("")}\n        </ul>\n    </div>\n    `,h=async()=>`\n    <div class="List-locations List" id="listLocationS">\n        <h1 class="Title-list-locations">Todas las localizaciones</h1>\n        <ul>\n        ${(await t("/location")).results.map((n=>`\n            <li>\n                ${n.name}\n            </li>\n            `)).join("")}\n        </ul>\n    </div>\n    `,d=n.p+"assets/image/7772fc3f79ebaa87ac90.svg",p=n.p+"assets/image/8132481baddaaa1342f9.svg",m=n.p+"assets/image/6d0d37142a1460ba7e82.png",u=()=>`\n            <div class="Social-media">\n                <ul>\n                    <li> \n                        <a href="">\n                            <img src="${d}" alt="github" />\n                        </a>\n                    </li>\n                    <li> \n                        <a href="">\n                            <img src="${p}" alt="twiter" />\n                        </a>\n                    </li>\n                    <li> \n                        <a href="">\n                            <img src="${m}" alt="email" />\n                        </a>\n                    </li>\n                </ul>\n            </div>\n            <p> ♥♠ by <span>Erika Aviles</span> 2022</p>\n    `,g=()=>'\n    <div class="Error404">\n        <h2>Error 404 </h2>\n    </div> \n ',$=n=>{if(n.length<=3){return"/"===n?n:"/:id"}return`/${n}`},v={"/":i,"/:id":r,"/characters":o,"/episodes":l,"/locations":h,"/contact":"Contact"},w=async()=>{const n=document.getElementById("header"),s=document.getElementById("content"),t=document.getElementById("section"),i=document.getElementById("footer");n.innerHTML=await a();let r=e(),o=await $(r),l=v[o]?v[o]:g;s.innerHTML=await l(),t.innerHTML=await c(),i.innerHTML=await u()};window.addEventListener("load",w),window.addEventListener("hashchange",w)})();